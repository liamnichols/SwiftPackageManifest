import ManifestDescription
import ManifestLoading
import ManifestWriting
import XCTest

class ManifestReadWriteTests: XCTestCase {
    func testReadAndWrite_standardPackage() throws {
        // Given a manifest file
        let input = """
        // swift-tools-version: 5.4

        // Written by hand

        import PackageDescription

        let package = Package(
            name: "TestPackage",
            platforms: [
                .iOS("15.2"),
                .macOS("12")
            ],
            products: [
                .executable(
                    name: "foo",
                    targets: ["Foo"]
                ),
                .library(
                    name: "FooLib",
                    targets: ["FooLib"]
                )
            ],
            dependencies: [
                .package(
                    url: "https://github.com/foo/bar.git",
                    .branch("main")
                ),
                .package(
                    url: "https://github.com/foo/baz.git",
                    "0.2.3"..<"1.0.0"
                ),
                .package(
                    name: "TestLib",
                    path: "../TestLib"
                )
            ],
            targets: [
                .executableTarget(
                    name: "Foo",
                    dependencies: ["FooLib"]
                ),
                .target(
                    name: "FooLib",
                    dependencies: [
                        .product(
                            name: "BarLib",
                            package: "bar"
                        ),
                        .product(
                            name: "BazLib",
                            package: "baz"
                        )
                    ]
                )
            ]
        )
        """

        // When the manifest is loaded
        let loader = SyntaxBasedManifestLoader()
        let manifest = try loader.load(from: Data(input.utf8))

        // And then written out to a pretty printed string
        let writer = ManifestWriter()
        writer.options.header = "Written by hand"
        writer.options.prettyPrint = true
        let output = try writer.write(manifest)

        // Then the two manifests should be equal
        XCTAssertEqual(input, output)
    }

    func testReadAndWrite_playgroundApp() throws {
        // Given a manifest file
        let input = """
        // swift-tools-version: 5.5

        // WARNING:
        // This file is automatically generated.
        // Do not edit it by hand because the contents will be replaced.

        import PackageDescription
        import AppleProductTypes

        let package = Package(
            name: "Who Quit",
            platforms: [
                .iOS("15.2")
            ],
            products: [
                .iOSApplication(
                    name: "Who Quit",
                    targets: ["AppModule"],
                    displayVersion: "1.0",
                    bundleVersion: "1",
                    iconAssetName: "AppIcon",
                    accentColorAssetName: "AccentColor",
                    supportedDeviceFamilies: [
                        .pad,
                        .phone
                    ],
                    supportedInterfaceOrientations: [
                        .portrait,
                        .landscapeRight,
                        .landscapeLeft,
                        .portraitUpsideDown(.when(deviceFamilies: [.pad]))
                    ]
                )
            ],
            targets: [
                .executableTarget(
                    name: "AppModule",
                    path: "."
                )
            ]
        )
        """

        // When the manifest is loaded
        let loader = SyntaxBasedManifestLoader()
        let manifest = try loader.load(from: Data(input.utf8))

        // And then written out to a pretty printed string
        let writer = ManifestWriter()
        writer.options.header = """
        WARNING:
        This file is automatically generated.
        Do not edit it by hand because the contents will be replaced.
        """
        writer.options.prettyPrint = true
        let output = try writer.write(manifest)

        // Then the two manifests should be equal
        XCTAssertEqual(input, output)
    }
}
